{"ast":null,"code":"import _toConsumableArray from\"/Users/juliemorris/Documents/Skillcrush/REACT/sticky-note-ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"/Users/juliemorris/Documents/Skillcrush/REACT/sticky-note-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/juliemorris/Documents/Skillcrush/REACT/sticky-note-ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/juliemorris/Documents/Skillcrush/REACT/sticky-note-ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/juliemorris/Documents/Skillcrush/REACT/sticky-note-ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from\"react\";import Header from\"./Header.js\";import NotesList from\"./NotesList.js\";/* This container component manages all of the state \nfor this application, delegating rendering logic to \npresentational components. */var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={notes:[],searchText:\"\"};_this.addNote=function(){var newNote={id:Date.now(),title:\"\",description:\"\",doesMatchSearch:true};var newNotes=[newNote].concat(_toConsumableArray(_this.state.notes));_this.setState({notes:newNotes});};_this.deleteNote=function(noteId){var updatedNotes=_this.state.notes.filter(function(note){return note.id!==noteId;});_this.setState({notes:updatedNotes});};_this.componentDidUpdate=function(){var stateString=JSON.stringify(_this.state.notes);localStorage.setItem(\"savedNotes\",stateString);};_this.componentDidMount=function(){var stateString=localStorage.getItem(\"savedNotes\");if(stateString){var savedNotes=JSON.parse(stateString);_this.setState({notes:savedNotes});}};_this.onType=function(editId,updatedKey,updatedValue){var updatedNotes=_this.state.notes.map(function(note){if(note.id!==editId){return note;}else{if(updatedKey===\"title\"){note.title=updatedValue;return note;}else{note.description=updatedValue;return note;}}});_this.setState({notes:updatedNotes});};_this.onSearch=function(text){/* toggle the doesMatchSearch boolean value of each sticky\n    note when the user types in the search field.\n    set the doesMatchSearch value to true for a sticky note if\n    it's title or description matches the search string. */var newSearchText=text.toLowerCase();var updatedNotes=_this.state.notes.map(function(note){if(!newSearchText){/* If the search field is empty, then\n      we set the doesMatchSearch value for every note to true. */note.doesMatchSearch=true;return note;}else{var title=note.title.toLowerCase();var description=note.description.toLowerCase();var titleMatch=title.includes(newSearchText);var descriptionMatch=description.includes(newSearchText);var hasMatch=titleMatch||descriptionMatch;note.doesMatchSearch=hasMatch;return note;}});_this.setState({searchText:newSearchText,notes:updatedNotes});};return _this;}_createClass(App,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Header,{searchText:this.state.searchText,addNote:this.addNote,onSearch:this.onSearch}),/*#__PURE__*/React.createElement(NotesList,{onType:this.onType,notes:this.state.notes,deleteNote:this.deleteNote}));}}]);return App;}(Component);export default App;","map":{"version":3,"names":["React","Component","Header","NotesList","App","state","notes","searchText","addNote","newNote","id","Date","now","title","description","doesMatchSearch","newNotes","setState","deleteNote","noteId","updatedNotes","filter","note","componentDidUpdate","stateString","JSON","stringify","localStorage","setItem","componentDidMount","getItem","savedNotes","parse","onType","editId","updatedKey","updatedValue","map","onSearch","text","newSearchText","toLowerCase","titleMatch","includes","descriptionMatch","hasMatch"],"sources":["/Users/juliemorris/Documents/Skillcrush/REACT/sticky-note-ui/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./Header.js\";\nimport NotesList from \"./NotesList.js\";\n\n/* This container component manages all of the state \nfor this application, delegating rendering logic to \npresentational components. */\nclass App extends Component {\n  state = {\n    notes: [],\n    searchText: \"\"\n  };\n\n  addNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true\n    };\n    const newNotes = [newNote, ...this.state.notes];\n    this.setState({ notes: newNotes });\n  };\n\n  deleteNote = (noteId) => {\n    const updatedNotes = this.state.notes.filter((note) => note.id !== noteId);\n    this.setState({ notes: updatedNotes });\n  };\n\n  //fires anytime state changes\n  componentDidUpdate = () => {\n    const stateString = JSON.stringify(this.state.notes);\n    localStorage.setItem(\"savedNotes\", stateString);\n  };\n\n  componentDidMount = () => {\n    const stateString = localStorage.getItem(\"savedNotes\");\n    if (stateString) {\n      const savedNotes = JSON.parse(stateString);\n      this.setState({ notes: savedNotes });\n    }\n  };\n\n  //these are the parameters below:\n  //editId = id of the note that is edited\n  //updatedKey = title or descrtiption field\n  //updatedValue = whatever was entered in title/description value\n  onType = (editId, updatedKey, updatedValue) => {\n    const updatedNotes = this.state.notes.map((note) => {\n      if (note.id !== editId) {\n        return note;\n      } else {\n        if (updatedKey === \"title\") {\n          note.title = updatedValue;\n          return note;\n        } else {\n          note.description = updatedValue;\n          return note;\n        }\n      }\n    });\n    this.setState({ notes: updatedNotes });\n  };\n\n  onSearch = (text) => {\n    /* toggle the doesMatchSearch boolean value of each sticky\n    note when the user types in the search field.\n    set the doesMatchSearch value to true for a sticky note if\n    it's title or description matches the search string. */\n    const newSearchText = text.toLowerCase();\n    const updatedNotes = this.state.notes.map((note) => {\n      if (!newSearchText) {\n        /* If the search field is empty, then\n      we set the doesMatchSearch value for every note to true. */\n        note.doesMatchSearch = true;\n        return note;\n      } else {\n        const title = note.title.toLowerCase();\n        const description = note.description.toLowerCase();\n        const titleMatch = title.includes(newSearchText);\n        const descriptionMatch = description.includes(newSearchText);\n        const hasMatch = titleMatch || descriptionMatch;\n        note.doesMatchSearch = hasMatch;\n        return note;\n      }\n    });\n    this.setState({\n      searchText: newSearchText,\n      notes: updatedNotes\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Header\n          searchText={this.state.searchText}\n          addNote={this.addNote}\n          onSearch={this.onSearch}\n        />\n        <NotesList\n          onType={this.onType}\n          notes={this.state.notes}\n          deleteNote={this.deleteNote}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}